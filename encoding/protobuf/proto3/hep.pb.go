// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: hep.proto

package protobufv3

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// HEP represents HEP packet
type HEP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Protocol  uint32 `protobuf:"varint,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	SrcIp     string `protobuf:"bytes,3,opt,name=src_ip,json=srcIp,proto3" json:"src_ip,omitempty"`
	DstIp     string `protobuf:"bytes,4,opt,name=dst_ip,json=dstIp,proto3" json:"dst_ip,omitempty"`
	SrcPort   uint32 `protobuf:"varint,5,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	DstPort   uint32 `protobuf:"varint,6,opt,name=dst_port,json=dstPort,proto3" json:"dst_port,omitempty"`
	Tsec      uint32 `protobuf:"varint,7,opt,name=tsec,proto3" json:"tsec,omitempty"`
	Tmsec     uint32 `protobuf:"varint,8,opt,name=tmsec,proto3" json:"tmsec,omitempty"`
	ProtoType uint32 `protobuf:"varint,9,opt,name=proto_type,json=protoType,proto3" json:"proto_type,omitempty"`
	NodeId    uint32 `protobuf:"varint,10,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodePw    string `protobuf:"bytes,11,opt,name=node_pw,json=nodePw,proto3" json:"node_pw,omitempty"`
	Payload   []byte `protobuf:"bytes,12,opt,name=payload,proto3" json:"payload,omitempty"`
	CId       []byte `protobuf:"bytes,13,opt,name=c_id,json=cId,proto3" json:"c_id,omitempty"`
	Vlan      uint32 `protobuf:"varint,14,opt,name=vlan,proto3" json:"vlan,omitempty"`
	NodeName  string `protobuf:"bytes,15,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
}

func (x *HEP) Reset() {
	*x = HEP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hep_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HEP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HEP) ProtoMessage() {}

func (x *HEP) ProtoReflect() protoreflect.Message {
	mi := &file_hep_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HEP.ProtoReflect.Descriptor instead.
func (*HEP) Descriptor() ([]byte, []int) {
	return file_hep_proto_rawDescGZIP(), []int{0}
}

func (x *HEP) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *HEP) GetProtocol() uint32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

func (x *HEP) GetSrcIp() string {
	if x != nil {
		return x.SrcIp
	}
	return ""
}

func (x *HEP) GetDstIp() string {
	if x != nil {
		return x.DstIp
	}
	return ""
}

func (x *HEP) GetSrcPort() uint32 {
	if x != nil {
		return x.SrcPort
	}
	return 0
}

func (x *HEP) GetDstPort() uint32 {
	if x != nil {
		return x.DstPort
	}
	return 0
}

func (x *HEP) GetTsec() uint32 {
	if x != nil {
		return x.Tsec
	}
	return 0
}

func (x *HEP) GetTmsec() uint32 {
	if x != nil {
		return x.Tmsec
	}
	return 0
}

func (x *HEP) GetProtoType() uint32 {
	if x != nil {
		return x.ProtoType
	}
	return 0
}

func (x *HEP) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *HEP) GetNodePw() string {
	if x != nil {
		return x.NodePw
	}
	return ""
}

func (x *HEP) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *HEP) GetCId() []byte {
	if x != nil {
		return x.CId
	}
	return nil
}

func (x *HEP) GetVlan() uint32 {
	if x != nil {
		return x.Vlan
	}
	return 0
}

func (x *HEP) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

var File_hep_proto protoreflect.FileDescriptor

var file_hep_proto_rawDesc = []byte{
	0x0a, 0x09, 0x68, 0x65, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x68, 0x65, 0x70,
	0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x76, 0x33, 0x22, 0xf8, 0x02, 0x0a, 0x03, 0x48, 0x45, 0x50, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x72, 0x63, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x72, 0x63, 0x49, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x73,
	0x74, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x73, 0x74, 0x49,
	0x70, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x72, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x64, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x64, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x73, 0x65, 0x63, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x73, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6d, 0x73, 0x65, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6d, 0x73, 0x65,
	0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x70, 0x77, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x50, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x11, 0x0a, 0x04,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x63, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x76,
	0x6c, 0x61, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x42, 0xdf, 0x01, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x65, 0x70, 0x2e, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x76,
	0x33, 0x42, 0x08, 0x48, 0x65, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x32, 0x67,
	0x6f, 0x2e, 0x76, 0x6f, 0x69, 0x70, 0x6c, 0x65, 0x6e, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x68, 0x65,
	0x70, 0x2f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x76, 0x33, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76,
	0x33, 0xa2, 0x02, 0x03, 0x48, 0x45, 0x50, 0xaa, 0x02, 0x18, 0x48, 0x65, 0x70, 0x2e, 0x45, 0x6e,
	0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x56, 0x33, 0xca, 0x02, 0x18, 0x48, 0x65, 0x70, 0x5c, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e,
	0x67, 0x5c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x5c, 0x56, 0x33, 0xe2, 0x02, 0x24,
	0x48, 0x65, 0x70, 0x5c, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x5c, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x5c, 0x56, 0x33, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1b, 0x48, 0x65, 0x70, 0x3a, 0x3a, 0x45, 0x6e, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x3a, 0x3a,
	0x56, 0x33, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hep_proto_rawDescOnce sync.Once
	file_hep_proto_rawDescData = file_hep_proto_rawDesc
)

func file_hep_proto_rawDescGZIP() []byte {
	file_hep_proto_rawDescOnce.Do(func() {
		file_hep_proto_rawDescData = protoimpl.X.CompressGZIP(file_hep_proto_rawDescData)
	})
	return file_hep_proto_rawDescData
}

var file_hep_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_hep_proto_goTypes = []interface{}{
	(*HEP)(nil), // 0: hep.encoding.protobuf.v3.HEP
}
var file_hep_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_hep_proto_init() }
func file_hep_proto_init() {
	if File_hep_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hep_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HEP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hep_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hep_proto_goTypes,
		DependencyIndexes: file_hep_proto_depIdxs,
		MessageInfos:      file_hep_proto_msgTypes,
	}.Build()
	File_hep_proto = out.File
	file_hep_proto_rawDesc = nil
	file_hep_proto_goTypes = nil
	file_hep_proto_depIdxs = nil
}
